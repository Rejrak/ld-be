openapi: 3.0.3
info:
    title: Lasting Dynamics Example Service
    description: This service is a simple example of my backend template implementation.
    version: 0.0.1
servers:
    - url: http://localhost:9090
paths:
    /api/v1/training-plans:
        get:
            tags:
                - training_plan
            summary: list training_plan
            operationId: training_plan#list
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/TrainingPlan'
                                example:
                                    - description: A 4-week plan focused on upper body hypertrophy.
                                      endDate: "2025-04-25T00:00:00Z"
                                      id: 11111111-2222-3333-4444-555555555555
                                      name: Upper Body Strength
                                      startDate: "2025-03-25T00:00:00Z"
                                      userId: 550e8400-e29b-41d4-a716-446655440000
                                    - description: A 4-week plan focused on upper body hypertrophy.
                                      endDate: "2025-04-25T00:00:00Z"
                                      id: 11111111-2222-3333-4444-555555555555
                                      name: Upper Body Strength
                                      startDate: "2025-03-25T00:00:00Z"
                                      userId: 550e8400-e29b-41d4-a716-446655440000
                                    - description: A 4-week plan focused on upper body hypertrophy.
                                      endDate: "2025-04-25T00:00:00Z"
                                      id: 11111111-2222-3333-4444-555555555555
                                      name: Upper Body Strength
                                      startDate: "2025-03-25T00:00:00Z"
                                      userId: 550e8400-e29b-41d4-a716-446655440000
                                    - description: A 4-week plan focused on upper body hypertrophy.
                                      endDate: "2025-04-25T00:00:00Z"
                                      id: 11111111-2222-3333-4444-555555555555
                                      name: Upper Body Strength
                                      startDate: "2025-03-25T00:00:00Z"
                                      userId: 550e8400-e29b-41d4-a716-446655440000
                            example:
                                - description: A 4-week plan focused on upper body hypertrophy.
                                  endDate: "2025-04-25T00:00:00Z"
                                  id: 11111111-2222-3333-4444-555555555555
                                  name: Upper Body Strength
                                  startDate: "2025-03-25T00:00:00Z"
                                  userId: 550e8400-e29b-41d4-a716-446655440000
                                - description: A 4-week plan focused on upper body hypertrophy.
                                  endDate: "2025-04-25T00:00:00Z"
                                  id: 11111111-2222-3333-4444-555555555555
                                  name: Upper Body Strength
                                  startDate: "2025-03-25T00:00:00Z"
                                  userId: 550e8400-e29b-41d4-a716-446655440000
        post:
            tags:
                - training_plan
            summary: create training_plan
            operationId: training_plan#create
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateTrainingPlanPayload'
                        example:
                            description: A plan for strength.
                            endDate: "2025-04-25T00:00:00Z"
                            name: Upper Body Strength
                            startDate: "2025-03-25T00:00:00Z"
                            userId: 550e8400-e29b-41d4-a716-446655440000
            responses:
                "201":
                    description: Created response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TrainingPlan'
                            example:
                                description: A 4-week plan focused on upper body hypertrophy.
                                endDate: "2025-04-25T00:00:00Z"
                                id: 11111111-2222-3333-4444-555555555555
                                name: Upper Body Strength
                                startDate: "2025-03-25T00:00:00Z"
                                userId: 550e8400-e29b-41d4-a716-446655440000
    /api/v1/training-plans/{id}:
        delete:
            tags:
                - training_plan
            summary: delete training_plan
            operationId: training_plan#delete
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    example: a936ecb1-2416-45f1-aa23-741479c90772
                    format: uuid
                  example: 6326813d-760d-4ca9-b46d-299e2265dbe3
            responses:
                "204":
                    description: No Content response.
        get:
            tags:
                - training_plan
            summary: get training_plan
            operationId: training_plan#get
            parameters:
                - name: id
                  in: path
                  description: Training plan ID
                  required: true
                  schema:
                    type: string
                    description: Training plan ID
                    example: 554bc0ad-9171-4ef7-9346-9ace3dda288d
                    format: uuid
                  example: 82039d46-8ba2-4cb7-bda0-3e5a53e9c0c9
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TrainingPlan'
                            example:
                                description: A 4-week plan focused on upper body hypertrophy.
                                endDate: "2025-04-25T00:00:00Z"
                                id: 11111111-2222-3333-4444-555555555555
                                name: Upper Body Strength
                                startDate: "2025-03-25T00:00:00Z"
                                userId: 550e8400-e29b-41d4-a716-446655440000
        put:
            tags:
                - training_plan
            summary: update training_plan
            operationId: training_plan#update
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                    example: 27ece96d-3e68-4cf5-bc2e-b2bbf5d888f8
                    format: uuid
                  example: 3494e5b5-71ee-4f1a-89e8-a05407a72ffa
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateTrainingPlanPayload'
                        example:
                            description: A plan for strength.
                            endDate: "2025-04-25T00:00:00Z"
                            name: Upper Body Strength
                            startDate: "2025-03-25T00:00:00Z"
                            userId: 550e8400-e29b-41d4-a716-446655440000
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TrainingPlan'
                            example:
                                description: A 4-week plan focused on upper body hypertrophy.
                                endDate: "2025-04-25T00:00:00Z"
                                id: 11111111-2222-3333-4444-555555555555
                                name: Upper Body Strength
                                startDate: "2025-03-25T00:00:00Z"
                                userId: 550e8400-e29b-41d4-a716-446655440000
    /api/v1/user:
        get:
            tags:
                - user
            summary: list user
            description: List all users with pagination
            operationId: user#list
            parameters:
                - name: limit
                  in: query
                  description: Number of users to return per page
                  allowEmptyValue: true
                  schema:
                    type: integer
                    description: Number of users to return per page
                    default: 10
                    example: 10
                    format: int64
                    minimum: 1
                    maximum: 100
                  example: 10
                - name: offset
                  in: query
                  description: Number of users to skip
                  allowEmptyValue: true
                  schema:
                    type: integer
                    description: Number of users to skip
                    default: 0
                    example: 0
                    format: int64
                    minimum: 0
                  example: 0
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/User'
                                example:
                                    - admin: false
                                      firstName: John
                                      id: f47ac10b-58cc-4372-a567-0e02b2c3d479
                                      kcId: 550e8400-e29b-41d4-a716-446655440000
                                      lastName: Doe
                                      nickname: JD
                                    - admin: false
                                      firstName: John
                                      id: f47ac10b-58cc-4372-a567-0e02b2c3d479
                                      kcId: 550e8400-e29b-41d4-a716-446655440000
                                      lastName: Doe
                                      nickname: JD
                            example:
                                - admin: false
                                  firstName: John
                                  id: f47ac10b-58cc-4372-a567-0e02b2c3d479
                                  kcId: 550e8400-e29b-41d4-a716-446655440000
                                  lastName: Doe
                                  nickname: JD
                                - admin: false
                                  firstName: John
                                  id: f47ac10b-58cc-4372-a567-0e02b2c3d479
                                  kcId: 550e8400-e29b-41d4-a716-446655440000
                                  lastName: Doe
                                  nickname: JD
        post:
            tags:
                - user
            summary: create user
            description: Create a new user
            operationId: user#create
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUserPayload'
                        example:
                            admin: false
                            firstName: John
                            lastName: Doe
                            nickname: JD
                            password: Secret!1
            responses:
                "201":
                    description: Created response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                            example:
                                admin: false
                                firstName: John
                                id: f47ac10b-58cc-4372-a567-0e02b2c3d479
                                kcId: 550e8400-e29b-41d4-a716-446655440000
                                lastName: Doe
                                nickname: JD
    /api/v1/user/{id}:
        delete:
            tags:
                - user
            summary: delete user
            description: Delete a user
            operationId: user#delete
            parameters:
                - name: id
                  in: path
                  description: User ID
                  required: true
                  schema:
                    type: string
                    description: User ID
                    example: f47ac10b-58cc-4372-a567-0e02b2c3d479
                    format: uuid
                  example: f47ac10b-58cc-4372-a567-0e02b2c3d479
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'badRequest: Parametri non validi'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                            example:
                                fault: false
                                id: Aonp24i2
                                message: ID must be greater or equal than 1 but got value -1
                                name: invalid_range
                                temporary: false
                                timeout: false
                "401":
                    description: 'unauthorized: Autenticazione fallita'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                            example:
                                message: Unde nesciunt voluptatem dolores aut magnam alias.
                "404":
                    description: 'notFound: Dato non trovato all''interno del sistema'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFound'
                            example:
                                message: Molestias maiores deserunt veritatis cumque.
                "500":
                    description: 'internalServerError: Errore nel server'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                message: Et odit modi.
        get:
            tags:
                - user
            summary: get user
            description: Get a user by ID
            operationId: user#get
            parameters:
                - name: id
                  in: path
                  description: User ID
                  required: true
                  schema:
                    type: string
                    description: User ID
                    example: f47ac10b-58cc-4372-a567-0e02b2c3d479
                    format: uuid
                  example: f47ac10b-58cc-4372-a567-0e02b2c3d479
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                            example:
                                admin: false
                                firstName: John
                                id: f47ac10b-58cc-4372-a567-0e02b2c3d479
                                kcId: 550e8400-e29b-41d4-a716-446655440000
                                lastName: Doe
                                nickname: JD
                "400":
                    description: 'badRequest: Parametri non validi'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                            example:
                                fault: false
                                id: Aonp24i2
                                message: ID must be greater or equal than 1 but got value -1
                                name: invalid_range
                                temporary: false
                                timeout: false
                "401":
                    description: 'unauthorized: Autenticazione fallita'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                            example:
                                message: Eum expedita eum cupiditate.
                "404":
                    description: 'notFound: Dato non trovato all''interno del sistema'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFound'
                            example:
                                message: Aliquid eos commodi aut.
                "500":
                    description: 'internalServerError: Errore nel server'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                message: Rerum quidem.
        put:
            tags:
                - user
            summary: update user
            description: Update a user
            operationId: user#update
            parameters:
                - name: id
                  in: path
                  description: User ID
                  required: true
                  schema:
                    type: string
                    description: User ID
                    example: f47ac10b-58cc-4372-a567-0e02b2c3d479
                    format: uuid
                  example: f47ac10b-58cc-4372-a567-0e02b2c3d479
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateRequestBody'
                        example:
                            admin: false
                            firstName: John
                            lastName: Doe
                            nickname: JD
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                            example:
                                admin: false
                                firstName: John
                                id: f47ac10b-58cc-4372-a567-0e02b2c3d479
                                kcId: 550e8400-e29b-41d4-a716-446655440000
                                lastName: Doe
                                nickname: JD
                "400":
                    description: 'badRequest: Parametri non validi'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequest'
                            example:
                                fault: false
                                id: Aonp24i2
                                message: ID must be greater or equal than 1 but got value -1
                                name: invalid_range
                                temporary: false
                                timeout: false
                "401":
                    description: 'unauthorized: Autenticazione fallita'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Unauthorized'
                            example:
                                message: Rerum accusamus consequuntur animi voluptas non est.
                "404":
                    description: 'notFound: Dato non trovato all''interno del sistema'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFound'
                            example:
                                message: Quos ut aut.
                "500":
                    description: 'internalServerError: Errore nel server'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                message: Maxime ut non.
components:
    schemas:
        BadRequest:
            type: object
            properties:
                fault:
                    type: boolean
                    description: Indica se l'errore è dovuto a un problema del server
                    example: false
                id:
                    type: string
                    description: ID dell'errore
                    example: Aonp24i2
                message:
                    type: string
                    description: Descrizione dettagliata dell'errore
                    example: ID must be greater or equal than 1 but got value -1
                name:
                    type: string
                    description: Nome dell'errore
                    example: invalid_range
                temporary:
                    type: boolean
                    description: Indica se l'errore è temporaneo
                    example: false
                timeout:
                    type: boolean
                    description: Indica se l'errore è dovuto a un timeout
                    example: false
            description: Body di risposta per la richiesta non valida (400)
            example:
                fault: false
                id: Aonp24i2
                message: ID must be greater or equal than 1 but got value -1
                name: invalid_range
                temporary: false
                timeout: false
            required:
                - name
                - id
                - message
                - temporary
                - timeout
                - fault
        CreateTrainingPlanPayload:
            type: object
            properties:
                description:
                    type: string
                    description: Description
                    example: A plan for strength.
                endDate:
                    type: string
                    example: "2025-04-25T00:00:00Z"
                    format: date-time
                name:
                    type: string
                    description: Name of the plan
                    example: Upper Body Strength
                    minLength: 1
                startDate:
                    type: string
                    example: "2025-03-25T00:00:00Z"
                    format: date-time
                userId:
                    type: string
                    example: 550e8400-e29b-41d4-a716-446655440000
                    format: uuid
            example:
                description: A plan for strength.
                endDate: "2025-04-25T00:00:00Z"
                name: Upper Body Strength
                startDate: "2025-03-25T00:00:00Z"
                userId: 550e8400-e29b-41d4-a716-446655440000
            required:
                - name
                - startDate
                - endDate
                - userId
        CreateUserPayload:
            type: object
            properties:
                admin:
                    type: boolean
                    description: Is admin?
                    default: false
                    example: false
                firstName:
                    type: string
                    description: First name
                    example: John
                lastName:
                    type: string
                    description: Last name
                    example: Doe
                nickname:
                    type: string
                    description: Nickname
                    example: JD
                password:
                    type: string
                    description: User password
                    example: Secret!1
                    pattern: ^[a-zA-Z0-9!@#\$%\^&\*\(\)_\+\-=\[\]{};':"\\|,.<>\/?]{6,}$
                    minLength: 6
            example:
                admin: false
                firstName: John
                lastName: Doe
                nickname: JD
                password: Secret!1
            required:
                - firstName
                - lastName
        InternalServerError:
            type: object
            properties:
                message:
                    type: string
                    description: Descrizione dell'errore
                    default: Errore di comunicazione con il server
                    example: Accusantium sapiente dolorem et ea.
            description: Errore nel server
            example:
                message: Est repellat.
            required:
                - message
        NotFound:
            type: object
            properties:
                message:
                    type: string
                    description: Descrizione dell'errore
                    default: Dato non trovato
                    example: Aspernatur dolores atque incidunt.
            description: 'Dato non trovato all''interno del sistema '
            example:
                message: Et nostrum.
            required:
                - message
        TrainingPlan:
            type: object
            properties:
                description:
                    type: string
                    description: Description of the plan
                    example: A 4-week plan focused on upper body hypertrophy.
                endDate:
                    type: string
                    description: End date in ISO 8601
                    example: "2025-04-25T00:00:00Z"
                    format: date-time
                id:
                    type: string
                    description: TrainingPlan ID
                    example: 11111111-2222-3333-4444-555555555555
                    format: uuid
                name:
                    type: string
                    description: Name of the training plan
                    example: Upper Body Strength
                startDate:
                    type: string
                    description: Start date in ISO 8601
                    example: "2025-03-25T00:00:00Z"
                    format: date-time
                userId:
                    type: string
                    description: ID of the user who owns the plan
                    example: 550e8400-e29b-41d4-a716-446655440000
                    format: uuid
            example:
                description: A 4-week plan focused on upper body hypertrophy.
                endDate: "2025-04-25T00:00:00Z"
                id: 11111111-2222-3333-4444-555555555555
                name: Upper Body Strength
                startDate: "2025-03-25T00:00:00Z"
                userId: 550e8400-e29b-41d4-a716-446655440000
            required:
                - id
                - name
                - startDate
                - endDate
                - userId
        Unauthorized:
            type: object
            properties:
                message:
                    type: string
                    description: Descrizione dell'errore
                    default: Utente già registrato a
                    example: Tempora deleniti.
            description: Errore di autenticazione non riuscita
            example:
                message: Qui sunt ipsa et mollitia.
            required:
                - message
        UpdateRequestBody:
            type: object
            properties:
                admin:
                    type: boolean
                    description: Is admin?
                    default: false
                    example: false
                firstName:
                    type: string
                    description: First name
                    example: John
                lastName:
                    type: string
                    description: Last name
                    example: Doe
                nickname:
                    type: string
                    description: Nickname
                    example: JD
            example:
                admin: false
                firstName: John
                lastName: Doe
                nickname: JD
            required:
                - firstName
                - lastName
        User:
            type: object
            properties:
                admin:
                    type: boolean
                    description: Is the user an admin?
                    default: false
                    example: false
                firstName:
                    type: string
                    description: First name of the user
                    example: John
                id:
                    type: string
                    description: Unique ID of the user
                    example: f47ac10b-58cc-4372-a567-0e02b2c3d479
                    format: uuid
                kcId:
                    type: string
                    description: Keycloak ID
                    example: 550e8400-e29b-41d4-a716-446655440000
                    format: uuid
                lastName:
                    type: string
                    description: Last name of the user
                    example: Doe
                nickname:
                    type: string
                    description: Nickname
                    example: JD
            example:
                admin: false
                firstName: John
                id: f47ac10b-58cc-4372-a567-0e02b2c3d479
                kcId: 550e8400-e29b-41d4-a716-446655440000
                lastName: Doe
                nickname: JD
            required:
                - id
                - kcId
                - firstName
                - lastName
tags:
    - name: training_plan
      description: Service for managing training plans
    - name: user
      description: User service for managing users
